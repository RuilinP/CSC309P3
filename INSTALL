# This text file should explain how to deploy your website.

# You should write detailed description on:

# 1. All the packages you need to install
# 2. How to configure various servers (e.g., Nginx, Apache, etc)

Assume that a Ubuntu 22.04.6 LTS server is freshly installed.
Mine for testing:

ruilin@ubuntu:/etc/netplan$ neofetch
            .-/+oossssoo+/-.               ruilin@ubuntu 
        `:+ssssssssssssssssss+:`           ------------- 
      -+ssssssssssssssssssyyssss+-         OS: Ubuntu 20.04.6 LTS aarch64 
    .ossssssssssssssssssdMMMNysssso.       Host: Raspberry Pi 4 Model B Rev 1.2 
   /ssssssssssshdmmNNmmyNMMMMhssssss/      Kernel: 5.4.0-1098-raspi 
  +ssssssssshmydMMMMMMMNddddyssssssss+     Uptime: 5 hours, 40 mins 
 /sssssssshNMMMyhhyyyyhmNMMMNhssssssss/    Packages: 722 (dpkg), 4 (snap) 
.ssssssssdMMMNhsssssssssshNMMMdssssssss.   Shell: bash 5.0.17 
+sssshhhyNMMNyssssssssssssyNMMMysssssss+   Terminal: /dev/pts/0 
ossyNMMMNyMMhsssssssssssssshmmmhssssssso   CPU: BCM2835 (4) @ 1.500GHz 
ossyNMMMNyMMhsssssssssssssshmmmhssssssso   Memory: 237MiB / 3791MiB 
+sssshhhyNMMNyssssssssssssyNMMMysssssss+
.ssssssssdMMMNhsssssssssshNMMMdssssssss.                           
 /sssssssshNMMMyhhyyyyhdNMMMNhssssssss/                            
  +sssssssssdmydMMMMMMMMddddyssssssss+
   /ssssssssssshdmNNNNmyNMMMMhssssss/
    .ossssssssssssssssssdMMMNysssso.
      -+sssssssssssssssssyyyssss+-
        `:+ssssssssssssssssss+:`
            .-/+oossssoo+/-.



1. Internet
The first step is to connect to the internet.
Either through an ethernet cable or netplan if wireless
-----------------------------
sudo nano 50-cloud-init.yaml |
------------------------------
=========================================================
#edit it this way
network:
    version: 2
    wifis:
        wlan0:
            optional: true
            access-points:
                "{SSID}":
                    password: "{password}"
            dhcp4: true
=========================================================
-------------------------------------------------------------------
sudo netplan -debug generate #to fix errors in 50-cloud-init.yaml |
sudo reboot                                                       |
-------------------------------------------------------------------
After reboot
---------------------------
ip a                      |
---------------------------
to check the local ip address which can be used to ssh or api call later.
To be accessible beyong the LAn the server is connected, port forwarding and firewall options
need to be edited on the configuration of the router.



2. Setup

After connected to the internet,
---------------------------------------------
git clone https://github.com/RuilinP/CSC309P3|
sudo apt update                              |
sudo apt upgrade                             |
sudo apt install pip3                        |
sudo apt install python3-venv                |
sudo pip3 install mod-wsgi                   |
---------------------------------------------

# REVERSE PROXY
like in any debian distro for basic setup(local development server)
To install nginx for reverse proxy(Thing is that, what's deployed on frontend might actaully make https request, but we can only process http, so we need https -> http and then http -> https)
--------------------------------------------------------------------------------
sudo apt-get install nginx                                                     | 
sudo apt install certbot python3-certbot-nginx                                 |
cd /etc/nginx/sites-available                                                  |
sudo nano petpal #nginx conf                                                   |
--------------------------------------------------------------------------------
========================================================================================================================
server {
    listen 8000;
    server_name x.x.x.x; # Your domain name or server IP

    location ^~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/acme-challenge;
    }
}

server {
    listen 443 ssl;
    server_name x.x.x.x; # Your domain name or server IP

    ssl_certificate /path/to/your/certificate.crt; # Path to SSL certificate
    ssl_certificate_key /path/to/your/privatekey.key; # Path to private key

    # SSL configurations

    location / {
        proxy_pass http://0.0.0.0:8000; # Replace with your Django app address (e.g., http://127.0.0.1:8000)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Ssl on;

        proxy_redirect http:// https://;
    }
}

==================================================================================================================
------------------------------------------------------------------------------------
systemctl nginx restart                                                             |
sudo certbot --nginx -d petpal.ruilinp.com                                          |
# and then put the certificate in conf                                              |
------------------------------------------------------------------------------------
#APACHE
------------------------------------------------------------
sudo apt install apache2 apache2-dev apache2-utils          |
libapache2-mod-wsgi-py3                                     |
sudo cp CSC309P3/backend /var/www/                          |
sudo chown â€“R www-data:www-data /var/www/backend            |
cd /etc/apache2/sites-available/                            |
sudo nano backend.conf                                      |
------------------------------------------------------------
========================================================================================================
<VirtualHost *:80>

        ServerName petpal.ruilin.site
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/backend

        WSGIDaemonProcess petpal python-path=/var/www/petpal py>
        WSGIProcessGroup petpal
        WSGIScriptAlias / /var/www/petpal/petpal/wsgi.py
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, wh>
        # enabled or disabled at a global level, it is possible>
        # include a line for only one particular virtual host. >
        # following line enables the CGI configuration for this>
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf

        Alias /media/ /var/www/petpal/media
        <Directory /var/www/petpal/media>
                Require all granted
        </Directory>

</VirtualHost>
==========================================================================================================
-----------------------------------
a2ensite petpal.conf              |
apache2ctl -k start               |
-----------------------------------
#React
-----------------------------------
cd /home/ruilin/CSC309P3/fontend   |
npm run build                      |
cd build                           |
serve -s build                     |
-----------------------------------



